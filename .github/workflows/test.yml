name: python-aodndata

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  MPLBACKEND: agg

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8' ]
        stage: [ 'build', 'rc', 'production']
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: update apt-cache
      run: |
        sudo apt-get update &&
        sudo apt-get install -y software-properties-common --no-install-recommends &&
        sudo add-apt-repository -y -u ppa:ubuntugis/ubuntugis-unstable
    - name: install additional required packages
      run: |
        sudo apt-get install -y --no-install-recommends \
        libudunits2-dev \
        libproj-dev \
        libgeos-dev \
        libffi-dev \
        cmake \
        libgtest-dev \
        build-essential \
        curl \
        libcurl4-openssl-dev
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip==24.0

        pip download celery==5.1.2 --no-binary :all:
        tar -xzf celery-5.1.2.tar.gz
        cd celery-5.1.2

        sed -i "s/'pytz>dev'/'pytz>=2020.1'/" setup.py

        python setup.py bdist_wheel
        pip install dist/celery-5.1.2-*.whl
        cd ..

        pip install pytest-runner
        pip install pyshp
        pip install scipy
        pip install -r stage_requirements.txt
        pip install pytest-cov
        pip list
      env:
        STAGE: ${{ matrix.stage }}
    - name: Test with pytest
      run: |
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
